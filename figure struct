#include <iostream>
#include <string>

using namespace std;

class Figure   
{
private:
	double side;
public:
	Figure(double _newS){
		this->side = _newS;
	}
	void setside(double _newS){ // tak sie ustawia wartosc
		this->side = _newS;
	}
	double getside(){ 
		return this->side;
	}
};
class rectangle: public Figure // dziedziczenie po klasie square
{
private:
	double l_side; // l_side = long side
public:
	rectangle(double _newS,double _newL):Figure(_newS){ 
		this->l_side= _newL;
	}
};
class square: public rectangle
{
public:
	square(double _newS,double _newL):rectangle(_newS,_newL){}
};

class pentagon: public rectangle // dziedziczenie po klasie rectangle + square
{
private:
	double la_side; // la = last
public:
	pentagon(double _newS,double _newL,double _newLa):rectangle(_newL,_newS){ 
		this->la_side= _newLa;
	}
};
class hexagon: public rectangle // dziedziczenie po klasie square, jest to szesciokÄ…t foremny
{
private:
	double r_side; // r_side ostatnie dwa boki
public:
	hexagon(double _newS,double _newL,double _newR):rectangle(_newS,_newL){ 
		this->r_side= _newR;
	}
};
class diamond: public Figure // dziedziczenie po klasie square, jest to romb
{
public:
	diamond(double _newS):Figure(_newS){} 
};

class trapeze: public Figure
{
private:
	double d_side; // d_side = down side
	double u_side; // u_side = up side
public:
	trapeze(double _newS,double _newD,double _newU):Figure(_newS){
		this->d_side=_newD;
		this->u_side=_newU;
	}
};

class triangle: public Figure
{
public:
	triangle(double _newS):Figure(_newS){}
};


class circle
{
private:
		double r; // r = radius
public:
	circle(double radius){
		this->r = radius;
	}
	void setr(double radius){
		this->r = radius;
	}
	double getr(){ 
		return this->r;
	}
};
int main(){}
